# backend/app/services/location_utils.py
"""
地理位置工具模块
提供中国主要城市的经纬度信息，用于真太阳时校正计算
"""

from typing import Optional, Tuple, Dict, Any
import re

# 中国主要城市经纬度数据（经度, 纬度）
CHINESE_CITIES_COORDINATES = {
    # 直辖市
    "北京": (116.4074, 39.9042),
    "北京市": (116.4074, 39.9042),
    "上海": (121.4737, 31.2304),
    "上海市": (121.4737, 31.2304),
    "天津": (117.1901, 39.0839),
    "天津市": (117.1901, 39.0839),
    "重庆": (106.5516, 29.5630),
    "重庆市": (106.5516, 29.5630),
    
    # 省会城市
    "广州": (113.2644, 23.1291),
    "广州市": (113.2644, 23.1291),
    "深圳": (114.0579, 22.5431),
    "深圳市": (114.0579, 22.5431),
    "杭州": (120.1551, 30.2741),
    "杭州市": (120.1551, 30.2741),
    "南京": (118.7969, 32.0603),
    "南京市": (118.7969, 32.0603),
    "武汉": (114.2954, 30.5928),
    "武汉市": (114.2954, 30.5928),
    "成都": (104.0665, 30.5723),
    "成都市": (104.0665, 30.5723),
    "西安": (108.9402, 34.3416),
    "西安市": (108.9402, 34.3416),
    "沈阳": (123.4307, 41.8057),
    "沈阳市": (123.4307, 41.8057),
    "长春": (125.3245, 43.8171),
    "长春市": (125.3245, 43.8171),
    "哈尔滨": (126.5340, 45.8038),
    "哈尔滨市": (126.5340, 45.8038),
    "济南": (117.0009, 36.6758),
    "济南市": (117.0009, 36.6758),
    "郑州": (113.6254, 34.7466),
    "郑州市": (113.6254, 34.7466),
    "太原": (112.5492, 37.8570),
    "太原市": (112.5492, 37.8570),
    "石家庄": (114.5149, 38.0428),
    "石家庄市": (114.5149, 38.0428),
    "合肥": (117.2272, 31.8206),
    "合肥市": (117.2272, 31.8206),
    "南昌": (115.8921, 28.6765),
    "南昌市": (115.8921, 28.6765),
    "福州": (119.2965, 26.0745),
    "福州市": (119.2965, 26.0745),
    "厦门": (118.0894, 24.4798),
    "厦门市": (118.0894, 24.4798),
    "昆明": (102.8332, 24.8801),
    "昆明市": (102.8332, 24.8801),
    "贵阳": (106.6308, 26.6477),
    "贵阳市": (106.6308, 26.6477),
    "南宁": (108.3669, 22.8177),
    "南宁市": (108.3669, 22.8177),
    "海口": (110.3312, 20.0311),
    "海口市": (110.3312, 20.0311),
    "三亚": (109.5122, 18.2577),
    "三亚市": (109.5122, 18.2577),
    "拉萨": (91.1409, 29.6456),
    "拉萨市": (91.1409, 29.6456),
    "乌鲁木齐": (87.6168, 43.8256),
    "乌鲁木齐市": (87.6168, 43.8256),
    "银川": (106.2309, 38.4872),
    "银川市": (106.2309, 38.4872),
    "呼和浩特": (111.7519, 40.8426),
    "呼和浩特市": (111.7519, 40.8426),
    "兰州": (103.8236, 36.0581),
    "兰州市": (103.8236, 36.0581),
    "西宁": (101.7782, 36.6171),
    "西宁市": (101.7782, 36.6171),
    
    # 其他重要城市
    "苏州": (120.5853, 31.2989),
    "苏州市": (120.5853, 31.2989),
    "无锡": (120.3019, 31.5729),
    "无锡市": (120.3019, 31.5729),
    "常州": (119.9463, 31.7815),
    "常州市": (119.9463, 31.7815),
    "南通": (120.8579, 32.0146),
    "南通市": (120.8579, 32.0146),
    "温州": (120.6994, 27.9944),
    "温州市": (120.6994, 27.9944),
    "宁波": (121.5440, 29.8683),
    "宁波市": (121.5440, 29.8683),
    "嘉兴": (120.7554, 30.7467),
    "嘉兴市": (120.7554, 30.7467),
    "绍兴": (120.5820, 30.0023),
    "绍兴市": (120.5820, 30.0023),
    "金华": (119.6492, 29.0895),
    "金华市": (119.6492, 29.0895),
    "台州": (121.4286, 28.6568),
    "台州市": (121.4286, 28.6568),
    "佛山": (113.1220, 23.0291),
    "佛山市": (113.1220, 23.0291),
    "东莞": (113.7518, 23.0489),
    "东莞市": (113.7518, 23.0489),
    "中山": (113.3824, 22.5150),
    "中山市": (113.3824, 22.5150),
    "珠海": (113.5767, 22.2707),
    "珠海市": (113.5767, 22.2707),
    "汕头": (116.6881, 23.3540),
    "汕头市": (116.6881, 23.3540),
    "青岛": (120.3826, 36.0671),
    "青岛市": (120.3826, 36.0671),
    "烟台": (121.3914, 37.5137),
    "烟台市": (121.3914, 37.5137),
    "潍坊": (119.1078, 36.7161),
    "潍坊市": (119.1078, 36.7161),
    "威海": (122.1158, 37.5097),
    "威海市": (122.1158, 37.5097),
    "临沂": (118.3269, 35.1045),
    "临沂市": (118.3269, 35.1045),
    "大连": (121.6147, 38.9140),
    "大连市": (121.6147, 38.9140),
    "鞍山": (122.9951, 41.1106),
    "鞍山市": (122.9951, 41.1106),
    "抚顺": (123.9570, 41.8654),
    "抚顺市": (123.9570, 41.8654),
    "本溪": (123.7707, 41.2945),
    "本溪市": (123.7707, 41.2945),
    "洛阳": (112.4540, 34.6197),
    "洛阳市": (112.4540, 34.6197),
    "开封": (114.3411, 34.7971),
    "开封市": (114.3411, 34.7971),
    "新乡": (113.9267, 35.3030),
    "新乡市": (113.9267, 35.3030),
    "焦作": (113.2418, 35.2158),
    "焦作市": (113.2418, 35.2158),
}

def get_city_coordinates(city_name: str) -> Optional[Tuple[float, float]]:
    """
    根据城市名称获取经纬度坐标
    
    Args:
        city_name: 城市名称，如 "北京"、"北京市"、"上海"等
        
    Returns:
        (longitude, latitude) 元组，如果找不到则返回None
    """
    if not city_name:
        return None
        
    # 清理城市名称
    cleaned_name = city_name.strip()
    
    # 直接查找
    if cleaned_name in CHINESE_CITIES_COORDINATES:
        return CHINESE_CITIES_COORDINATES[cleaned_name]
    
    # 尝试去掉"市"后缀查找
    if cleaned_name.endswith("市"):
        without_suffix = cleaned_name[:-1]
        if without_suffix in CHINESE_CITIES_COORDINATES:
            return CHINESE_CITIES_COORDINATES[without_suffix]
    
    # 尝试添加"市"后缀查找
    with_suffix = cleaned_name + "市"
    if with_suffix in CHINESE_CITIES_COORDINATES:
        return CHINESE_CITIES_COORDINATES[with_suffix]
    
    # 模糊匹配：查找包含关键词的城市
    for city, coords in CHINESE_CITIES_COORDINATES.items():
        if cleaned_name in city or city in cleaned_name:
            return coords
    
    return None

def calculate_time_zone_offset(longitude: float) -> float:
    """
    根据经度计算理论时区偏移量（相对于UTC）
    中国统一使用UTC+8，但这里按地理位置计算理论时区
    
    Args:
        longitude: 经度
        
    Returns:
        时区偏移量（小时）
    """
    # 每15度经度对应1小时时差
    return round(longitude / 15.0)

def calculate_solar_time_offset(longitude: float, std_longitude: float = 120.0) -> float:
    """
    计算真太阳时偏移量（相对于标准时间）
    
    Args:
        longitude: 当地经度
        std_longitude: 标准时区经度（中国使用东八区120°E）
        
    Returns:
        真太阳时偏移量（分钟）
    """
    # 每度经度对应4分钟时差
    offset_minutes = (longitude - std_longitude) * 4
    return offset_minutes

def get_location_info(birth_place: str) -> Dict[str, Any]:
    """
    获取出生地的详细地理信息
    
    Args:
        birth_place: 出生地点名称
        
    Returns:
        包含经纬度、时区等信息的字典
    """
    result = {
        "city_name": birth_place,
        "longitude": None,
        "latitude": None,
        "found": False,
        "solar_time_offset_minutes": 0,
        "theoretical_timezone": 8  # 中国统一使用UTC+8
    }
    
    coordinates = get_city_coordinates(birth_place)
    if coordinates:
        longitude, latitude = coordinates
        result.update({
            "longitude": longitude,
            "latitude": latitude,
            "found": True,
            "solar_time_offset_minutes": calculate_solar_time_offset(longitude),
            "theoretical_timezone": calculate_time_zone_offset(longitude)
        })
    
    return result

# 测试函数
def test_location_utils():
    """测试地理位置工具函数"""
    test_cities = ["北京", "上海市", "广州", "深圳", "杭州市", "成都", "西安", "不存在的城市"]
    
    print("=== 地理位置工具测试 ===")
    for city in test_cities:
        info = get_location_info(city)
        print(f"城市: {city}")
        print(f"  找到: {info['found']}")
        if info['found']:
            print(f"  经纬度: ({info['longitude']:.4f}, {info['latitude']:.4f})")
            print(f"  真太阳时偏移: {info['solar_time_offset_minutes']:.1f}分钟")
            print(f"  理论时区: UTC{info['theoretical_timezone']:+d}")
        print()

if __name__ == "__main__":
    test_location_utils()
